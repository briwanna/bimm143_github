---
title: "Class10"
author: "Brianna Smith"
format: pdf
---

## Importing candy data

First things first, let’s get the data from the FiveThirtyEight GitHub repo. You can either read from the URL directely or download this candy-data.csv file and place it in your project directory. Either way we need to load it up with `read.csv()` and inspect the data to see exactly what we’re dealing with.

```{r}
candy_file <- "candy-data.csv"

candy = read.csv(candy_file, row.names=1)
head(candy)
```


> Q1. How many different candy types are in this dataset?

```{r}
ncol(candy)*5
```


> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

## What is your favorate candy?

One of the most interesting variables in the dataset is winpercent. For a given candy this value is the percentage of people who prefer this candy over another randomly chosen candy from the dataset (what 538 term a matchup). Higher values indicate a more popular candy.

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Sour Patch Kids", ]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

library("skimr")
skim(candy)
```{r}
library("skimr")
skim(candy)
```

>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Winpercent is very different because it has whole numbers in the mean, sd, p0,p25, p50, p75, and p100.

>Q7. What do you think a zero and one represent for the candy$chocolate column?


A good place to start any exploratory analysis is with a histogram. You can do this most easily with the base R function `hist()`. Alternatively, you can use `ggplot()` with `geom_hist()`. Either works well in this case and (as always) its your choice.

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

> Q9. Is the distribution of winpercent values symmetrical?

The distribution is skewed to the right and it is not symentrical.

> Q10. Is the center of the distribution above or below 50%?

The center is below 50 at about 45%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocolate <- mean(candy$winpercent[as.logical(candy$chocolate)])
chocolate
```
```{r}
fruit <- mean(candy$winpercent[as.logical(candy$fruity)])
fruit
```
The chocolate candies are prefered over the fruity candies.

> Q12. Is this difference statistically significant?

```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)], candy$winpercent[as.logical(candy$fruity)] )
```
The p value is very low, therefore this is a significant statistical difference.

## Overall Candy Rankings

Let’s use the base R order() function together with head() to sort the whole dataset by winpercent

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[order(candy$winpercent),], n=5)
```

To examine more of the dataset in this vain we can make a barplot to visualize the overall rankings. We will use an iterative approach to building a useful visulization by getting a rough starting plot and then refining and adding useful details in a stepwise process.

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)
ggplot(candy) + aes(winpercent, rownames(candy)) + geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + aes(winpercent, reorder(rownames(candy), winpercent)) + geom_col()
```


# Time to add some useful color

Let’s setup a color vector (that signifies candy type) that we can then use for some future plots. We start by making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

## Taking a look at pricepercent

The pricepercent variable records the percentile rank of the candy’s price against all the other candies in the dataset. Lower vales are less expensive and high values more expensive. To this plot we will add text labels so we can more easily identify a given candy. There is a regular geom_label() that comes with ggplot2. To help with overlapping, we can use the geom_text_repel() function from the ggrepel package.

```{r}
library(ggrepel)
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?


```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
tail( candy[ord,c(11,12)], n=5 )
```
 Tootsie roll midgeies are the least expensive with the highest winpercent of the five.
 

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```
Nik L Nip is the least popular of the most expensive candies.

## Exploring the correlation structure

Now that we’ve explored the dataset a little, we’ll see how the variables interact with one another. We’ll use correlation and view the results with the corrplot package to plot a correlation matrix

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity are the most anti-correlated

> Q23. Similarly, what two variables are most positively correlated?

chocolate and winpercent are most positively correlated. 

## Principal Component Analysis

Let’s apply PCA using the `prcom()` function to our candy dataset remembering to set the scale=TRUE argument.

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

Now we can plot our main PCA score plot of PC1 vs PC2.

```{r}
plot(pca$x[,1:2])
```

We can change the plotting character and add some color:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

We can make a much nicer plot with the ggplot2 package but it is important to note that ggplot works best when you supply an input data.frame that includes a separate column for each of the aesthetics you would like displayed in your final plot.

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Again we can use the ggrepel package and the function ggrepel::geom_text_repel() to label up the plot with non overlapping candy names like. We will also add a title and subtitle like so:

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

If you want to see more candy labels you can change the max.overlaps value to allow more overlapping labels or pass the ggplot object p to plotly like so to generate an interactive plot that you can mouse over to see labels:

```{r}
#library(plotly)
ggplotly(p)
```

Let’s finish by taking a quick look at PCA our loadings. Do these make sense to you?

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, pluribus and hard are picked up in the positive direction. This would make sense to me because the fruity candy is correlated with being hard and coming in packs of multiples. 






